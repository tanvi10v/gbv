/**
 * Preloads all necessary game assets.
 * This function is called by Phaser's preload method in each scene.
 * @param {Phaser.Scene} instance - The current Phaser scene instance.
 */
export const preloadAssets = (instance) => {
  // Load individual images
  instance.load.image("background", "assets/startBg.png"); 
  instance.load.image("gameName", "assets/gameName.png"); 
  instance.load.image("choiceBoard", "assets/choice.png"); 
  instance.load.image("supportiveBtn", "assets/option.png"); 
  instance.load.image("unsupportiveBtn", "assets/option.png"); 
  instance.load.image("scoreBoard", "assets/score.png"); 

  // Load texture atlases.
  // A texture atlas is a collection of smaller images (frames) packed into a single larger image (the atlas image).
  // The associated JSON file describes the location and size of each frame within the atlas image.
  // This approach is more efficient for rendering and managing multiple small sprites.

  // NOTE: The .png files for these atlases (`ui_buttons_atlas.png`, `collectables_atlas.png`, 
  // `character_atlas.png`, `obstacles_atlas.png`) were initially created as 1x1 pixel placeholders.
  // For the game to display correctly, these PNGs should be replaced with actual combined sprite sheet images
  // generated by a texture packing tool, matching the frame definitions in their respective JSON files.
  // The `vite-plugin-imagemin` added to the build process will compress these final atlas images.

  // Atlas for common UI buttons (e.g., start, restart, continue)
  instance.load.atlas('ui_buttons_atlas', 'assets/ui_buttons_atlas.png', 'assets/ui_buttons_atlas.json');
  
  // Atlas for collectable items (e.g., coin, diamond, jewel)
  instance.load.atlas('collectables_atlas', 'assets/collectables_atlas.png', 'assets/collectables_atlas.json');
  
  // Atlas for character animations/states (e.g., bird_ready, bird_jump)
  instance.load.atlas('character_atlas', 'assets/character_atlas.png', 'assets/character_atlas.json');
  
  // Atlas for obstacle types (e.g., bomb, skull, spikeLog)
  instance.load.atlas('obstacles_atlas', 'assets/obstacles_atlas.png', 'assets/obstacles_atlas.json');
};
